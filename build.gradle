apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'org.ajoberstar.github-pages'
apply plugin: 'signing'

sourceCompatibility = 1.8

group = 'com.github.topikachu'
version = '0.0.1'
description = 'Java to JSON Schema v.4 mapper'
ext.packaging = 'jar'

def isDevBuild
def isCiBuild
def isReleaseBuild

def sonatypeRepositoryUrl

//set build variables based on build type (release, continuous integration, development)
if(hasProperty("release")) {
    isReleaseBuild = true
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else if (hasProperty("ci")) {
    isCiBuild = true
    version += "-SNAPSHOT"
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
} else {
    isDevBuild = true
}

repositories {
    mavenCentral()
}

dependencies {
	compile group: 'org.json', name: 'json', version: '20140107'
	testCompile group: 'javax.validation', name: 'validation-api', version: '1.1.0.Final'
	testCompile group: 'junit', name: 'junit', version: '4.11'
	testCompile group: 'com.google.guava', name: 'guava', version: '18.0'
	testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
}

buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'
		classpath 'org.ajoberstar:gradle-git:0.12.0'
	}
}

jacocoTestReport {
	reports {
		xml.enabled = true
		html.enabled = true
	}
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from tasks.javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar

    archives javadocJar
    archives sourcesJar
}

task wrapper(type: Wrapper) {
    group = 'Buildmaster'
    description = 'Generates gradlew and gradlew.bat bootstrap scripts'
    gradleVersion = '2.5'
}

//********* artifact signing *********
if(isReleaseBuild) {
    signing {
        sign configurations.archives
    }
} else {
    task signArchives {
        // do nothing
    }
}

uploadArchives {
    repositories {
        if (isDevBuild) {
            mavenLocal()
        }
        else {
            mavenDeployer {
                if(isReleaseBuild) {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                }

                repository(url: sonatypeRepositoryUrl) {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                    name 'JSONschema4-mapper'
                    packaging 'jar'
                    description 'The goal of this project is to provide comprehensive, feature-complete and well-tested mapper from Java classes to JSON schema format.'
                    url 'https://github.com/topikachu/JSONschema4-mapper'

                    scm {
                        url 'scm:git@github.com:topikachu/JSONschema4-mapper.git'
                        connection 'scm:git@github.com:topikachu/JSONschema4-mapper.git'
                        developerConnection 'scm:git@github.com:topikachu/JSONschema4-mapper.git'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'wodzuu'
                            name 'Maciej Zientarski'
                        }
                        developer {
                            id 'topikachu'
                            name 'Gong Yi'
                        }

                    }
                }
            }
        }
    }
}

githubPages {
	repoUri = 'https://github.com/topikachu/JSONschema4-mapper'
	targetBranch = 'mvn-repo'
	commitMessage = 'development release'
	pages {
		from "$buildDir/repo"
	}
}